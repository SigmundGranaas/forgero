plugins {
	id "maven-publish"
}

def isSnapshotVersion = { versionString ->
	return versionString.contains("-g")
}

def getGitVersion = { ->
	def projectVersion = project.forgero_version + "+" + project.minecraft_version
	try {
		def stdout = new ByteArrayOutputStream()
		exec {
			commandLine "git", "describe", "--tags"
			standardOutput = stdout
		}

		def gitVersionString = stdout.toString().trim()
		def gitVersionStringParsed = gitVersionString.startsWith("v") ? gitVersionString.substring(1) : gitVersionString

		// If it's a snapshot version, append '-SNAPSHOT'
		if (isSnapshotVersion(gitVersionStringParsed)) {
			return gitVersionStringParsed += "-SNAPSHOT"
		} else {
			return projectVersion
		}
	}
	catch (Exception ignored) {
		return projectVersion
	}
}

println("Forgero version: ${getGitVersion()}")

version = "${getGitVersion()}"
group = project.maven_group

subprojects {
	version = "${getGitVersion()}"
	group = project.maven_group

	repositories {
		mavenCentral()
		mavenLocal()
		maven {
			url "https://libraries.minecraft.net"
		}
	}
}

subprojects { project ->
	if (project.name != 'content') {
		apply plugin: "maven-publish"
		apply plugin: "java-library"


		publishing {
			repositories {
				maven {
					name = "ArchivaMavenRepo"
					// Determine if it's a snapshot and adjust the URL accordingly.
					url = isSnapshotVersion(project.version) ?
						"https://maven.sigmundgranaas.com/repository/snapshots/" :
						"https://maven.sigmundgranaas.com/repository/internal/"
					credentials {
						username 'admin'
						password System.getenv("ARCHIVA_ADMIN_KEY")
					}
				}
			}

			publications {
				mavenJava(MavenPublication) {
					groupId = group
					if (project.name === 'fabric') {
						artifactId = 'forgero-fabric'
						archivesBaseName = 'forgero-fabric'
					} else {
						artifactId = archivesBaseName
					}
					from components.java
				}
			}

		}
	}
}


task copyJars(type: Copy) {
	group = 'build'
	from subprojects.collect { it.tasks.withType(AbstractArchiveTask) }
	exclude "**/*-dev.jar"
	into "$buildDir/libs"
}
