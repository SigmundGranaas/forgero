//file:noinspection GroovyAssignabilityCheck

plugins {
	id "maven-publish"
}

def ENV = System.getenv()

def getGitVersion = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine "git", "describe", "--tags"
		standardOutput = stdout
	}

	def gitVersionString = stdout.toString().trim()
	def gitVersionStringParsed = gitVersionString.startsWith("v") ? gitVersionString.substring(1) : gitVersionString

	return gitVersionStringParsed
}

def getVersion = {
	return ENV.GITHUB_RUN_NUMBER ? "${getGitVersion()}" : "${project.forgero_version}+${project.minecraft_version}"
}

println("Forgero version: ${getGitVersion()}")

version = "${getVersion()}"
group = project.maven_group

subprojects {
	version = "${getVersion()}"
	group = project.maven_group

	repositories {
		mavenCentral()
		mavenLocal()
	}
}

subprojects {
	if (it.name != 'content') {
		apply plugin: "maven-publish"
		apply plugin: "java-library"
		repositories {
			mavenCentral()
			mavenLocal()
		}

		publishing {
			repositories {
				maven {
					name = "GitHubPackages"
					url = uri("https://maven.pkg.github.com/sigmundgranaas/forgero")
					credentials {
						username = "sigmundgranaas"
						password = System.getenv("GPR_API_KEY")
					}
				}
			}

			publishing {
				publications {
					gpr(MavenPublication) {
						groupId = group // Replace with your groupId
						artifactId = archives_base_name // Replace with your module's name
						from components.java
					}
				}
			}
		}
	}
}


task copyJars(type: Copy) {
	group = 'build'
	from subprojects.collect { it.tasks.withType(AbstractArchiveTask) }
	exclude "**/*-dev.jar"
	into "$buildDir/libs"
}
