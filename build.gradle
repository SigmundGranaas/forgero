//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck

plugins {
	id "java-library"
	id "idea"
	id "maven-publish"
}

def isSnapshotVersion = { versionString ->
	return versionString.contains("-g")
}

def getGitVersion = { ->
	def projectVersion = rootProject.mod_version + "+" + rootProject.minecraft_version
	try {
		def stdout = new ByteArrayOutputStream()
		exec {
			commandLine "git", "describe", "--tags"
			standardOutput = stdout
		}

		def gitVersionString = stdout.toString().trim()
		def gitVersionStringParsed = gitVersionString.startsWith("v") ? gitVersionString.substring(1) : gitVersionString

		// If it's a snapshot version, append '-SNAPSHOT'
		if (isSnapshotVersion(gitVersionStringParsed)) {
			return gitVersionStringParsed + "-SNAPSHOT"
		} else {
			return projectVersion
		}
	}
	catch (Exception ignored) {
		return projectVersion
	}
}

println("${rootProject.mod_name} version: ${getGitVersion()}")

allprojects {
	apply plugin: "java-library"
	apply plugin: "idea"

	version = "${getGitVersion()}"
	group = project.maven_group

	repositories {
		mavenCentral()
		maven { url = "https://api.modrinth.com/maven" }
		maven { url = "https://jitpack.io" }
		maven { url = "https://maven.shedaniel.me/" }
		maven { url = "https://maven.blamejared.com" }
		maven { url = "https://minecraft.guntram.de/maven/" }
		maven { url = "https://maven.terraformersmc.com/" }
		maven { url = "https://maven.wispforest.io/" }
		maven { url = "https://maven.cafeteria.dev" }
		maven { url = "https://maven.gegy.dev" }
		maven { url = "https://maven.kosmx.dev/" }
		maven { url = "https://jitpack.io" }
		maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
		maven {
			name = "Xander Maven"
			url = "https://maven.isxander.dev/releases"
		}
		maven {
			name = "Ladysnake Mods"
			url = "https://maven.ladysnake.org/releases"
		}
		maven {
			url = "https://maven.jamieswhiteshirt.com/libs-release"
			content {
				includeGroup "com.jamieswhiteshirt"
			}
		}
	}

	dependencies {
		api(annotationProcessor("org.projectlombok:lombok:1.18.34"))

		api("org.jetbrains:annotations:24.1.0")
		api("com.google.guava:guava:33.2.1-jre")
		api("org.apache.logging.log4j:log4j-core:2.23.1")
		api("com.google.code.gson:gson:2.11.0")
	}

	tasks.withType(JavaCompile).configureEach {
		options.encoding = "UTF-8"
		options.release = "${rootProject.java_version}" as int
	}
}

subprojects { project ->
	if (project.name != 'content') {
		apply plugin: "maven-publish"

		publishing {
			repositories {
				maven {
					name = "ReposiliteMavenRepo"
					// Determine if it's a snapshot and adjust the URL accordingly.
					url = isSnapshotVersion(project.version) ?
						"https://maven.sigmundgranaas.com/snapshots/" :
						"https://maven.sigmundgranaas.com/releases/"
					credentials {
						username 'admin'
						password System.getenv("REPOSILITE_ADMIN_SECRET")
					}
				}
			}

			publications {
				mavenJava(MavenPublication) {
					groupId = group
					if (project.name === 'fabric') {
						artifactId = "${rootProject.mod_id}-fabric"
						archivesBaseName = "${rootProject.mod_id}-fabric"
					} else {
						artifactId = archivesBaseName
					}
					from components.java
				}
			}

		}
	}
}
