//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck
//file:noinspection DependencyNotationArgument

plugins {
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

archivesBaseName = "${rootProject.mod_id}-fabric"

architectury {
	platformSetupLoomIde()
	fabric()
}

loom {
	accessWidenerPath = project(":mods:forgero:base:base-common").loom.accessWidenerPath
}

configurations {
	common
	shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentFabric.extendsFrom common
}

dependencies {
	common(project(path: ":mods:forgero:base:base-common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":mods:forgero:base:base-common", configuration: "transformProductionFabric")) { transitive false }
	// Content submods
	project(":mods:forgero:content").subprojects.each { subproject ->
		if (!subproject.name.contains("fabric")) {
			return
		}

		include(runtimeOnly(project(path: subproject.path, configuration: "namedElements"))) { transitive false }
	}

	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	// Advanced Runtime Resource Pack
	include(modApi("maven.modrinth:arrp:${project.advanced_runtime_resource_pack_version}"))
}

processResources {
	inputs.property "version", rootProject.version

	from(project(":mods:forgero:base:base-common").sourceSets["main"].resources) {
		include("assets", "data", "resourcepacks", "${rootProject.mod_id}.accesswidener")
	}

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
			"mod_id": rootProject.mod_id,
			"mod_name": rootProject.mod_name,
			"mod_description": project.mod_description,
			"mod_license": rootProject.mod_license,
			"fabric_loader_version": project.fabric_loader_version,
			"java_version": rootProject.java_version,
			"supported_minecraft_version": rootProject.supported_minecraft_version
	}
}

shadowJar {
	exclude "architectury.common.json"

	configurations = [project.configurations.shadowCommon]
	archiveClassifier = "dev-shadow"
}

remapJar {
	injectAccessWidener = true
	inputFile.set shadowJar.archiveFile
	dependsOn shadowJar
}

sourcesJar {
	def commonSources = project(":mods:forgero:base:base-common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

curseforge {
	apiKey = System.getenv("CURSEFORGE_API_KEY") ?: ""
	project {
		id = '581435'
		changelogType = "markdown"
		changelog = file("${rootProject.projectDir}/changelog.md")

		releaseType = project.release_type
		addGameVersion project.minecraft_version
		addGameVersion 'Fabric'
		addGameVersion 'Quilt'
		addGameVersion "Java 17"

		mainArtifact(remapJar) {
			displayName = "Forgero [Fabric]: $version"
			relations {
				embeddedLibrary 'arrp'
				requiredDependency 'fabric-api'
				optionalDependency 'modonomicon'
				optionalDependency "lambdynamiclights"
				optionalDependency "better-combat"
				optionalDependency "modmenu"
				optionalDependency "mythicmetals"
				optionalDependency "betternether"
				optionalDependency "betterend"
				optionalDependency "mystical-crops"
				optionalDependency "mythicmetals"
				optionalDependency "natures-spirit"
				optionalDependency "create"
				optionalDependency "ad-astra"
				optionalDependency "deeperdarker"
				optionalDependency "ecologics"
				optionalDependency "naturalist"
				optionalDependency "advanced-netherite"
				optionalDependency "modern-industrialization"
				optionalDependency "oh-the-biomes-weve-gone"
				optionalDependency "techreborn"
				optionalDependency "lets-do-bloomingnature"
				optionalDependency "lets-do-beachparty"
				optionalDependency "lets-do-vinery"
				optionalDependency "lets-do-nethervinery"
				optionalDependency "gardens-of-the-dead"
				optionalDependency "ribbits"
				optionalDependency "dragonloot"
				optionalDependency "garnished-additions"
				optionalDependency "mythicmetals-decorations"
				optionalDependency "eldritch-end"
				optionalDependency "regions-unexplored"
				optionalDependency "spelunkery"
				optionalDependency "beneath-the-wetlands"
				optionalDependency "enderite-mod"
				optionalDependency "galosphere"
				optionalDependency "eden-ring-reforked"
				incompatible "exordium"
			}
		}
	}
	options {
		forgeGradleIntegration = false // defaults to true
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")

	projectId = project.mod_id
	versionNumber = version
	versionType = project.release_type
	uploadFile = remapJar
	gameVersions = [minecraft_version]
	loaders = ["fabric", "quilt"]
	versionName = "Forgero $version"
	changelog = file("${rootProject.projectDir}/changelog.md").text
	dependencies {
		embedded.project "arrp"
		required.project "fabric-api"
		optional.project "modonomicon"
		optional.project "lambdynamiclights"
		optional.project "better-combat"
		optional.project "modmenu"
		optional.project "mythicmetals"
		optional.project "betternether"
		optional.project "mystical_crops"
		optional.project "mythicmetals"
		optional.project "wiredredstone"
		optional.project "natures-spirit"
		optional.project "create"
		optional.project "ad-astra"
		optional.project "betterend"
		optional.project "deeperdarker"
		optional.project "ecologics"
		optional.project "naturalist"
		optional.project "advanced-netherite"
		optional.project "oh-the-biomes-weve-gone"
		optional.project "modern-industrialization"
		optional.project "lets-do-bloomingnature"
		optional.project "fruitful-fun"
		optional.project "lets-do-beachparty"
		optional.project "lets-do-nethervinery"
		optional.project "lets-do-vinery"
		optional.project "gardens-of-the-dead"
		optional.project "ribbits"
		optional.project "dragonloot"
		optional.project "garnished-additions"
		optional.project "mythicmetals-decorations"
		optional.project "eldritch-end"
		optional.project "regions-unexplored"
		optional.project "spelunkery"
		optional.project "ends-phantasm"
		optional.project "enderite-mod"
		optional.project "galosphere"
		optional.project "bountiful-fares"
		optional.project "eden-ring-reforked"
		optional.project "beneath-the-wetlands"
		incompatible.project "exordium"
	}
}

tasks.register('publishToModrinthAndCurseForge') {
	dependsOn 'modrinth', 'curseforge'
}
