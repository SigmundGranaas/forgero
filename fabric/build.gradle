//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck
//file:noinspection DependencyNotationArgument

plugins {
	id "fabric-loom" version "${fabric_loom_version}"
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

archivesBaseName = "${rootProject.mod_id}-fabric"

subprojects {
	apply plugin: "fabric-loom"

	dependencies {
		minecraft "com.mojang:minecraft:$project.minecraft_version"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

		// Common module
		api(project(":${rootProject.mod_id}-core"))

		// Content modules

		project(":content").subprojects.each { subproject ->
			dependencies.add("runtimeOnly", project(path: ":content:${subproject.name}"))
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Core fabric modules
	include(project(":${rootProject.mod_id}-core"))
	include(project(":fabric:${rootProject.mod_id}-fabric-core"))
	include(project(":fabric:minecraft-common"))

	// Fabric mod compat
	include(project(":fabric:${rootProject.mod_id}-fabric-compat"))

	// Modules
	dependencies {
		project(":fabric:modules").subprojects.each { subproject ->
			dependencies.add("include", project(path: ":fabric:modules:${subproject.name}"))
		}
	}

	// Content
	dependencies {
		project(":content").subprojects.each { subproject ->
			dependencies.add("include", project(path: ":content:${subproject.name}"))
		}
	}

	// Advanced runtime resource pack
	include modApi("maven.modrinth:arrp:${project.advanced_runtime_resource_pack_version}")
}

allprojects {
	processResources {
		inputs.property "version", rootProject.version

		filesMatching("fabric.mod.json") {
			expand "version": rootProject.version
		}
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${archivesBaseName}" }
		}
	}
	java {
		withSourcesJar()
	}
}

subprojects {
	dependencies {
		implementation 'org.jetbrains:annotations:23.0.0'
		testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
	}

	test {
		useJUnitPlatform()
	}

	java {
		withSourcesJar()
	}

}

curseforge {
	apiKey = System.getenv("CURSEFORGE_API_KEY") ?: ""
	project {
		id = '581435'
		changelogType = "markdown"
		changelog = file('../changelog.md')

		releaseType = project.release_type
		addGameVersion project.minecraft_version
		addGameVersion 'Fabric'
		addGameVersion 'Quilt'
		addGameVersion "Java 17"

		mainArtifact(remapJar) {
			displayName = "Forgero [Fabric]: $version"
			relations {
				embeddedLibrary 'arrp'
				requiredDependency 'fabric-api'
				optionalDependency 'modonomicon'
				optionalDependency "lambdynamiclights"
				optionalDependency "better-combat"
				optionalDependency "modmenu"
				optionalDependency "mythicmetals"
				optionalDependency "betternether"
				optionalDependency "betterend"
				optionalDependency "mystical-crops"
				optionalDependency "mythicmetals"
				optionalDependency "natures-spirit"
				optionalDependency "create"
				optionalDependency "ad-astra"
				optionalDependency "deeperdarker"
				optionalDependency "ecologics"
				optionalDependency "naturalist"
				optionalDependency "advanced-netherite"
				optionalDependency "modern-industrialization"
				optionalDependency "oh-the-biomes-weve-gone"
				optionalDependency "techreborn"
				optionalDependency "lets-do-bloomingnature"
				optionalDependency "lets-do-beachparty"
				optionalDependency "lets-do-vinery"
				optionalDependency "lets-do-nethervinery"
				optionalDependency "gardens-of-the-dead"
				optionalDependency "ribbits"
				optionalDependency "dragonloot"
				optionalDependency "garnished-additions"
				optionalDependency "mythicmetals-decorations"
				incompatible "exordium"
			}
		}
	}
	options {
		forgeGradleIntegration = false // defaults to true
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")

	projectId = project.mod_id
	versionNumber = version
	versionType = project.release_type
	uploadFile = remapJar
	gameVersions = [minecraft_version]
	loaders = ["fabric", "quilt"]
	versionName = "Forgero $version"
	changelog = file('../changelog.md').text
	dependencies {
		embedded.project "arrp"
		required.project "fabric-api"
		optional.project "modonomicon"
		optional.project "lambdynamiclights"
		optional.project "better-combat"
		optional.project "modmenu"
		optional.project "mythicmetals"
		optional.project "betternether"
		optional.project "mystical_crops"
		optional.project "mythicmetals"
		optional.project "wiredredstone"
		optional.project "natures-spirit"
		optional.project "create"
		optional.project "ad-astra"
		optional.project "betterend"
		optional.project "deeperdarker"
		optional.project "ecologics"
		optional.project "naturalist"
		optional.project "advanced-netherite"
		optional.project "oh-the-biomes-weve-gone"
		optional.project "modern-industrialization"
		optional.project "lets-do-bloomingnature"
		optional.project "fruitful-fun"
		optional.project "lets-do-beachparty"
		optional.project "lets-do-nethervinery"
		optional.project "lets-do-vinery"
		optional.project "gardens-of-the-dead"
		optional.project "ribbits"
		optional.project "dragonloot"
		optional.project "garnished-additions"
		optional.project "mythicmetals-decorations"
		incompatible.project "exordium"
	}
}

tasks.register('publishToModrinthAndCurseForge') {
	dependsOn 'modrinth', 'curseforge'
}
