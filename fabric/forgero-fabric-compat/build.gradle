//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck
//file:noinspection DependencyNotationArgument

dependencies {
	// Fabric common modules
	implementation(project(path: ":fabric:minecraft-common", configuration: "namedElements"))
	implementation(project(path: ":fabric:${rootProject.mod_id}-fabric-core", configuration: "namedElements"))

	// Bows
	localRuntime(project(path: ":fabric:modules:bows", configuration: 'namedElements'))

	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

	// YetAnotherConfigLib
	modCompileOnly("maven.modrinth:yacl:${project.yet_another_config_lib_version}")

	// Patchouli
	// TODO: Switch to Modonomicon
	modCompileOnly("maven.modrinth:patchouli:${project.patchouli_version}")

	// Better Combat
	modImplementation("maven.modrinth:cloth-config:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation("maven.modrinth:playeranimator:${project.player_animator_version}")
	modImplementation("maven.modrinth:better-combat:${project.better_combat_version}")

	// Mythic Metals
	// OwO thought it would be nice to give users a prompt to accept eula which crashes the test server. Don't enable it for anything but local testing.
	/**
	 annotationProcessor(modImplementation("io.wispforest:owo-lib:${project.owo_lib_version}"))
	 modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_api_version}")
	 modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")
	 modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}") {
	 exclude group: "net.fabricmc", module: "fabric-loader"
	 }
	 modImplementation("maven.modrinth:AdditionalEntityAttributes:${project.additional_entity_attributes_version}")
	 modImplementation("maven.modrinth:mythicmetals:${project.mythic_metals_version}")
	 modImplementation("maven.modrinth:alloy-forgery:${project.alloy_forgery_version}")
	 */

	// LambDynamicLights
	modCompileOnly("dev.lambdaurora:spruceui:${project.spruceui_version}")
	modCompileOnly("maven.modrinth:lambdynamiclights:${project.lamb_dynamic_lights_version}")

	// BClib & Wunderlib
	modImplementation "com.github.quiqueck:BCLib:${project.bclib_version}"
	modImplementation "com.github.quiqueck:WunderLib:${project.wunderlib_version}"


	// Better End
	modImplementation("maven.modrinth:betterend:${project.betterend_version}")
}

sourceSets {
	test {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	accessWidenerPath = file("src/main/resources/${project.name}.accesswidener")

	runs {
		testServer {
			server()
			ideConfigGenerated project.rootProject == project
			name = "Test Server"
			source sourceSets.test
		}
		gameTest {
			inherit testServer

			name "Game Test"
			// Enable the gametest runner
			vmArg "-Dfabric-api.gametest"
			vmArg "-Dfabric-api.gametest.report-file=${project.layout.buildDirectory}/junit.xml"
			runDir "build/gameTest"
		}
	}
}

test {
	useJUnitPlatform()
	maxParallelForks = 32
	testLogging.events("failed")
	testLogging.info.events = ["failed", "skipped"]
}
