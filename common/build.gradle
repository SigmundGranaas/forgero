//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck
//file:noinspection DependencyNotationArgument

plugins {
	id "architectury-plugin" version "${architectury_plugin_version}"
	id "dev.architectury.loom" version "${architectury_loom_version}"
}

architectury {
	common(rootProject.enabled_platforms.split(","))
}

dependencies {
	include(api(project(":core")))
	include(api(project(":common:generator")))

	minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// JUnit
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.0")

	// Reach Entity Attributes
	modApi("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}") {
		exclude(group: "net.fabricmc.fabric-loader")
	}
}

subprojects {
	apply plugin: "architectury-plugin"
	apply plugin: "dev.architectury.loom"

	dependencies {
		api(project(":core"))

		minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	}
}

processResources {
	inputs.property "version", rootProject.version
}

loom {
	accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

test {
	useJUnitPlatform()
}

java {
	withSourcesJar()
}
