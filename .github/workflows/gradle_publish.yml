# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get mod version from Gradle
        uses: madhead/read-java-properties@latest
        id: forgero_version
        with:
          file: gradle.properties
          property: mod_version
          default: 0.0.1

      - name: Get supported Minecraft version from Gradle
        uses: madhead/read-java-properties@latest
        id: supported_minecraft_version
        with:
          file: gradle.properties
          property: minecraft_version
          default: 0.0.1

      - run: echo version string ${{ steps.mod_version.outputs.value }}+${{ steps.supported_minecraft_version.outputs.value }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Execute Gradle build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Publish to Modrinth and CurseForge
        run: ./gradlew publishToModrinthAndCurseForge
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN  }}
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY  }}

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPR_API_KEY: ${{ secrets.GITHUB_TOKEN }}
